@using Reactor.Services.Users
@model IEnumerable<Reactor.Core.Model.Posts.PostListModel>
@inject IUserService UserService

<div class="col-12">
    @foreach (var m in Model)
    {
        <div class="post mb-3">
            <div class="post__content">
                <div class="post__photo-box">
                    <img class="post__photo" alt="@m.Post.Id image" src="@m.Post.CreatedBy.GetPicture()"/>
                </div>

                <div class="post__text-container">
                    <h2 class="post__author d-inline-block">@m.Post.CreatedBy.FullName</h2>
                    <time class="d-inline-block pull-right post__time timeago" datetime="@m.Post.CreatedOn.ToString("o")"></time>
                    <p class="post__text"> @m.Post.Content</p>
                </div>
                @foreach (var photo in m.Post.Photos)
                {
                    <img src="~/uploads/posts/@photo.FileName" class="p-1 w-100 d-block"/>
                }

            </div>
            <div class="d-flex justify-content-between post__icons">
                <div>
                    <a href="#">
                        <i class="fa fa-thumbs-o-up"></i>
                        Like (you and 99 people)
                    </a>
                </div>
                <div>
                    <a href="#" class="post__comment-icon" data-comments-target="#post__comments-@(m.Post.Id)">
                        <i class="fa fa-comment-o"></i> Comments <span class="comment-count-@(m.Post.Id)">(@m.CommentCount)</span>

                    </a>
                </div>
            </div>
            @await Component.InvokeAsync("Comments", new {postId = m.Post.Id})
        </div>
    }
</div>