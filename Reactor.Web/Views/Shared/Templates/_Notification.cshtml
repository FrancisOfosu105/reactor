@model IEnumerable<Notification>
@inject IUserService UserService

<li class="nav-item dropdown" id="notifications" title="notifications">
    @if (@Model.Count(n => !n.IsRead) != 0)
    {
        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button">

            <i class="fa fa-bell-o"></i>
            <span class="dropdown__badge">@Model.Count(n => !n.IsRead)</span>
        </a>
    }
    else
    {
        <a class="nav-link" asp-controller="Notification" asp-action="List">

            <i class="fa fa-bell-o"></i>
        </a>
    }
    <ul class="dropdown__menu dropdown-menu">
        <li class="dropdown__body">
            <ul class="dropdown__list">
                @foreach (var notification in Model)
                {
                    var sender = await UserService.GetUserByIdAsync(notification.SenderId);

                    <li class="dropdown__item">
                        <a href="#">
                            <div class="pull-left clearfix">
                                <img src="@sender.GetPicture()" alt="User Image">
                            </div>
                            <small>
                                <i class="fa fa-clock-o"></i> <time class="timeago" datetime="@notification.CreatedOn.ToString("o")"></time>
                            </small>

                            @switch (notification.Type)
                            {
                                case NotificationType.Like:
                                    <p><strong>@sender.FullName </strong> liked your post.</p>
                                    break;

                                case NotificationType.Comment:
                                    <p><strong>@sender.FullName </strong> commented on your post.</p>
                                    break;

                                case NotificationType.Following:
                                    <p><strong>@sender.FullName </strong>is now following you.</p>
                                    break;

                                case NotificationType.UnFollowed:
                                    <p><strong>@sender.FullName </strong> unfollowed you.</p>
                                    break;


                                case NotificationType.SentFriendRequest:
                                    <p><strong>@sender.FullName </strong> sent you a friend request.</p>
                                    break;


                                case NotificationType.AcceptedFriendRequest:
                                    <p>You and <strong>@sender.FullName </strong> are now friends.</p>
                                    break;


                                case NotificationType.RejectedFriendRequest:
                                    <p>@sender.FullName rejected your friend request.</p>
                                    break;
                            }

                        </a>
                    </li>
                }

            </ul>
        </li>
        <li class="dropdown__footer">
            <a asp-controller="Notification" asp-action="List"> View all</a>
        </li>
    </ul>
</li>